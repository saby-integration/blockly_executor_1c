
Функция ПолучитьHTTPСоединение(АвторизацияОнлайн, АдресСервера)
	
	//Вызывается из формы Browser для пользователя-редактора ini, наличие прокси не критично
	Возврат	Новый HTTPСоединение(ПолучитьАдресСервиса(АвторизацияОнлайн, АдресСервера, Ложь),,,,,180, ?(найти(АдресСервера, "localhost"), Неопределено,Новый ЗащищенноеСоединениеOpenSSL()));
	
КонецФункции

Функция ПолучитьАдресСервиса(СерверOnline, АдресСервера, ДобавитьПротокол = Истина) Экспорт	
	Если  Найти(АдресСервера,"localhost") или СерверOnline Тогда 
		Результат = АдресСервера;
	Иначе	
		Результат = АдресСервера;//"https://" + 
	КонецЕсли;
	Возврат Результат;	
КонецФункции

Функция СформироватьЗаголовкиЗапроса(РесурсЗапроса = "")	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/xml; charset=utf-8");
	ДанныеОВерсии = ПолучитьИмяФайлаИНомерТекущейВерсии();
	ИдПриложения = "1С8;"+ДанныеОВерсии[0]+ДанныеОВерсии[1];
	Если ИдПриложения <> Неопределено Тогда
		Заголовки.Вставить("User-Agent", ИдПриложения);
	КонецЕсли;	
	Если ВРег(РесурсЗапроса) <> "АВТОРИЗАЦИЯ" Тогда
		Заголовки.Вставить("X-SBISSessionID", ПолучитьИдентификаторСессии());
	КонецЕсли;	
	Возврат Заголовки;	
КонецФункции

Функция ПолучитьИдентификаторСессии( _ПараметрыРобота_ = Неопределено )
	Если ЗначениеЗаполнено(ИдентификаторСессии) Тогда
		Возврат ИдентификаторСессии;
	КонецЕсли;	
	
	Если _ПараметрыРобота_ <> Неопределено Тогда
		ПараметрыРобота = _ПараметрыРобота_;
	КонецЕсли;
	
	Хост = ПараметрыРобота["host"];
	Если ПараметрыРобота["host"] = "localhost" Тогда
		Хост = ПараметрыРобота["host2"]
	КонецЕсли;	
	Соединение = ПолучитьHTTPСоединение(Истина, Хост);
	ЗапросСервису = ПолучитьHTTPЗапрос("Авторизация");
	ОтветАвторизации = Соединение.ОтправитьДляОбработки(ЗапросСервису);
	
	Если ОтветАвторизации.КодСостояния <> 200 Тогда
		Х = 1;
	КонецЕсли;
	ТекстОтвета = ОтветАвторизации.ПолучитьТелоКакСтроку();
	ЧтениеОтвета = Новый ЧтениеJSON;
	ЧтениеОтвета.УстановитьСтроку(ТекстОтвета);
	ДанныеОтвета = ПрочитатьJSON(ЧтениеОтвета, Истина);
	ИдентификаторСессии = ДанныеОтвета.Получить("result");
	Возврат ИдентификаторСессии;
КонецФункции


Функция ЗавершитьСессиюСбис()
	Соединение = ПолучитьHTTPСоединение(Истина, ПараметрыРобота["host"]);
	
	ДопЗаголовки = Новый Соответствие;
	ДопЗаголовки.Вставить("X-SBISSessionID", ИдентификаторСессии);
	ЗапросСервису = ПолучитьHTTPЗапрос("Выход", ДопЗаголовки);
	ЗапросСервису.УстановитьТелоИзСтроки(СформироватьТекстЗапроса("СБИС.Выход"));
	
	Ответ = Соединение.ОтправитьДляОбработки(ЗапросСервису);
	Если Ответ.КодСостояния <> 200 Тогда
		Возврат Ложь;
	КонецЕсли;
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	ЧтениеОтвета = Новый ЧтениеJSON;
	ЧтениеОтвета.УстановитьСтроку(ТекстОтвета);
	ОтветВозврат = ПрочитатьJSON(ЧтениеОтвета, Ложь);
	Успешно = ОтветВозврат.Свойство("result") И ОтветВозврат.result = Неопределено;
	Возврат Успешно;
	
КонецФункции

Функция ПолучитьHTTPЗапрос(РесурсЗапроса, ДополнительныеЗаголовки = Неопределено, ДополнительныеПараметры = Неопределено)
	АдресРесурса = "";
	СтрокаТелаЗапроса = "";
	Если ВРег(РесурсЗапроса) = "АВТОРИЗАЦИЯ" Тогда
		АдресРесурса = "/auth/service/";
		КомандаСБИС = "СБИС.Аутентифицировать";
		Если ДополнительныеПараметры = Неопределено Тогда
			СтруктураПараметровЗапроса = Новый Структура("Пароль, Логин", ПараметрыРобота["Пароль"], ПараметрыРобота["Логин"]);//ЛОГИН ПАРОЛЬ
		КонецЕсли;
		СтрокаТелаЗапроса = СформироватьТекстЗапроса(КомандаСБИС, СтруктураПараметровЗапроса);
	ИначеЕсли ВРег(РесурсЗапроса) = "ВЫХОД" Тогда
		АдресРесурса = "/auth/service/";
	ИначеЕсли Врег(РесурсЗапроса) = "СКАЧАТЬ" Тогда
		АдресРесурса = "/service/?srv=1";
		КомандаСБИС = "СБИС.Аутентифицировать";
	КонецЕсли;	
	ЗапросСервису = Новый HTTPЗапрос(АдресРесурса, СформироватьЗаголовкиЗапроса(РесурсЗапроса));	
	Если СтрокаТелаЗапроса <> "" Тогда
		ЗапросСервису.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);	
	КонецЕсли;
	Возврат ЗапросСервису;
КонецФункции

Функция СформироватьТекстЗапроса(Метод, СтруктураПараметровЗапроса=Неопределено, ПротоколЗапроса=4)
	ТекстЗапроса = "{""jsonrpc"":""2.0"",""method"":"""+Метод+""", ""protocol"": "+Формат(ПротоколЗапроса, "ЧГ=")+", ""params"":{";
	Если СтруктураПараметровЗапроса <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса+ЗаписатьПараметрыЗапроса(СтруктураПараметровЗапроса);
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса+"},""id"":1}";	
	ТекстЗапроса = СтрЗаменить(СтрЗаменить(ТекстЗапроса,Символы.ПС," "),Символы.ВК," ");
	Возврат ТекстЗапроса;	
КонецФункции

Функция ЗаписатьПараметрыЗапроса(СтруктураПараметровЗапроса)	
	// BSLLS:CognitiveComplexity-off
	ТекстЗапроса = "";
	Для Каждого Элемент Из СтруктураПараметровЗапроса Цикл
		Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
			ТекстЗапроса = ТекстЗапроса+""""+Элемент.Ключ+""":"""+СтрЗаменить(Элемент.Значение, """", "\""")+""",";
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Число") Тогда
			ТекстЗапроса = ТекстЗапроса+""""+Элемент.Ключ+""":"""+строка(Элемент.Значение)+""",";
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Дата") Тогда
			ТекстЗапроса = ТекстЗапроса+""""+Элемент.Ключ+""":"""+строка(Элемент.Значение)+""",";
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Неопределено") Тогда
			ТекстЗапроса = ТекстЗапроса+""""+Элемент.Ключ+""":"""",";
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			ТекстЗапроса = ТекстЗапроса+""""+Элемент.Ключ+""":{"+ЗаписатьПараметрыЗапроса(Элемент.Значение)+"},";
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда
			ТекстЗапроса = ТекстЗапроса+""""+Элемент.Ключ+""":[";
			Для Каждого ЭлементМассива Из Элемент.Значение Цикл
				Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
					ТекстЗапроса = ТекстЗапроса+"{";				
					ТекстЗапроса = ТекстЗапроса+ЗаписатьПараметрыЗапроса(ЭлементМассива);
					ТекстЗапроса = ТекстЗапроса+"},";
				Иначе
					ТекстЗапроса = ТекстЗапроса+""""+строка(ЭлементМассива);
					ТекстЗапроса = ТекстЗапроса+""",";
				КонецЕсли;	
			КонецЦикла;
			Если Прав(ТекстЗапроса, 1) = "," Тогда
				ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1);
			КонецЕсли;
			ТекстЗапроса = ТекстЗапроса+"],";
		КонецЕсли;
	КонецЦикла;
	Если Прав(ТекстЗапроса, 1) = "," Тогда
		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1);
	КонецЕсли;
	Возврат ТекстЗапроса;
	// BSLLS:CognitiveComplexity-on
КонецФункции

